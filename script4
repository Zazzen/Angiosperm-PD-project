#this script will add tips to the tree as hard politomies, each added tip will have a true species name. this will be important for further meta data analysys

#load required packages
library("ape")
library("phytools")
library("stringr")
dados_nativas <- read.csv(file = "dados_reflora_nativas.csv", header = T, sep = ";", fileEncoding = "WINDOWS-1252") #required table


#this script uses the arvore_beta file generated by the last script
#this file should be backed up just in case
tree <- read.tree("arvore_beta")
write.tree(tree, file = "arvore_beta_backup")

#firstly, the script does not get along with families with more than 2 tips. So each family must be transformed in exact dicotomies

familias_editar <- unique(gsub(".*_", "", gsub("_2", "", tree$tip.label))) #tree family list. required for the loop

#the following loop dicotomizes each family, keeping the original family divergence time

for (i in 1:length(familias_editar)){
  print(i)
  familia.i <- familias_editar[i]
  tree <- read.tree(file = "arvore_beta")
  query.i <- grep(familia.i, tree$tip.label, value = T) #if the family is comprised by more than two tips
  if(length(query.i) > 2){
  for (i in 3:length(query.i)){
  tip.i <- query.i[i]
  tree <- drop.tip(tree, tip = tip.i) #exclude the exceeding tips
  print(tree)
  write.tree(tree, file = "arvore_beta")}
}}

#the following loop adds each tip to its family, according to the BFG chart
familias <- unique(gsub(".*_", "", gsub("_2","",tree$tip.label))) #family list needed for the loop

for (i in 1:length(familias)){
x <- i
familia.i <- as.character(familias[i])
dados.i <- dados_nativas[dados_nativas$FamÃ­lia == familia.i,]
especies <- as.character(unique(dados.i$sp))
especies_format <- paste(especies, familia.i, sep = "_")
  for (i in 1:length(especies_format)){
    print(familia.i)
    print(especies_format[i])
    newick <- readLines("arvore_beta")
    query_format <- paste(familia.i, ":\\d+\\.\\d+", sep = "") #this regex will find the family divergence time
    tempo <- as.numeric(gsub(".*\\:","",(str_extract(newick, query_format))))
    tip.i<-list(edge=matrix(c(2,1),1,2), #this command creates a phylogenetic tree which is a single tip, this is the tip that will be added!
        tip.label=especies_format[i],
        edge.length=tempo,
        Nnode=1)
        class(tip.i)<-"phylo"
    tree <- read.tree("arvore_beta")
    query.i <- grep(familia.i, tree$tip.label)
    no <- getMRCA(tree, tree$tip.label[query.i]) #this is the node in which the tip will be added (binded)
    binded <- bind.tree(tree, tip.i, where = no) #this is the tree with the added tip
    write.tree(binded, file = "arvore_beta")} #overwriting the tree each time a tip is added
}
